# 
#  Type: Deployment
#  What: PayMe Backend
#  Why: Contains the .NET Core WebAPI and Orleans code
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: paymeapp
spec:
  selector:
    matchLabels:
      app: paymeapp
      tier: backend
  replicas: 3
  template:
    metadata:
      labels:
        app: paymeapp
        tier: backend
        # The serviceId label is used to identify the service to Orleans
        orleans/serviceId: backend
        # The clusterId label is used to identify an instance of a cluster to Orleans.
        # Typically, this will be the same value as serviceId or any fixed value.
        # In cases where you are not using rolling deployments (for example, blue/green deployments),
        # this value can allow for distinct clusters which do not communicate directly with each others,
        # but which still share the same storage and other resources.
        orleans/clusterId: backend
    spec:
      containers:
        - name: main
          image: watterson.azurecr.io/payme-server
          imagePullPolicy: Always
          ports:
          - name: http
            containerPort: 80
          - containerPort: 443
          - containerPort: 11111
          - containerPort: 8888
          env:
          # Configure settings to let Orleans know which cluster it belongs to and which pod it is running in
          - name: ORLEANS_SERVICE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['orleans/serviceId']
          - name: ORLEANS_CLUSTER_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['orleans/clusterId']
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: DOTNET_SHUTDOWNTIMEOUTSECONDS
            value: "120"
          - name: REDIS
            value: "redis" # The name of the redis service
      terminationGracePeriodSeconds: 180
  minReadySeconds: 60
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
...